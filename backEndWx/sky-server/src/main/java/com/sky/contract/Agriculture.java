package com.sky.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicStruct;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class Agriculture extends Contract {
    public static final String[] BINARY_ARRAY = {"","","55565b905092915050565b600060208201905081810360008301526120048184611de5565b905092915050565b600060208201905081810360008301526120268184611eaa565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561205157600080fd5b8060405250919050565b600067ffffffffffffffff82111561207257600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120ff5780820151818401526020810190506120e4565b8381111561210e576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820412548c23cc8feac127b1fe99157982f04e82ac33331581933eb10da7e4263d26c6578706572696d656e74616cf50037"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","55565b905092915050565b600060208201905081810360008301526120048184611de5565b905092915050565b600060208201905081810360008301526120268184611eaa565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561205157600080fd5b8060405250919050565b600067ffffffffffffffff82111561207257600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120ff5780820151818401526020810190506120e4565b8381111561210e576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820412548c23cc8feac127b1fe99157982f04e82ac33331581933eb10da7e4263d26c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"methodSignatureAsString\":\"deleteTransport(uint256)\",\"name\":\"deleteTransport\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"getOrigin(uint256)\",\"name\":\"getOrigin\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"_commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"\",\"indexed\":false,\"components\":[{\"name\":\"commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"commodityName\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"origin\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"originX\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"originY\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"commodityPartition\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"bagging\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"growTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"irrigateTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"fertilizerTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"weedingTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"temperature\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"farming\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"pickingTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"remark\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"supervisor\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"deleted\",\"type\":\"bool\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"bool\"}],\"dynamic\":true,\"typeAsString\":\"(uint256,string,string,int256,int256,string,uint256,uint256,uint256,uint256,uint256,int256,string,uint256,string,string,bool)\"}]},{\"methodSignatureAsString\":\"deleteOrigin(uint256)\",\"name\":\"deleteOrigin\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"addOrigin((uint256,string,string,int256,int256,string,uint256,uint256,uint256,uint256,uint256,int256,string,uint256,string,string,bool))\",\"name\":\"addOrigin\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"info\",\"type\":\"tuple\",\"internalType\":\"\",\"indexed\":false,\"components\":[{\"name\":\"commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"commodityName\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"origin\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"originX\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"originY\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"commodityPartition\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"bagging\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"growTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"irrigateTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"fertilizerTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"weedingTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"temperature\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"farming\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"pickingTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"remark\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"supervisor\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"deleted\",\"type\":\"bool\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"bool\"}],\"dynamic\":true,\"typeAsString\":\"(uint256,string,string,int256,int256,string,uint256,uint256,uint256,uint256,uint256,int256,string,uint256,string,string,bool)\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"deleteSell(uint256)\",\"name\":\"deleteSell\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"getTransport(uint256)\",\"name\":\"getTransport\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"_commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"\",\"indexed\":false,\"components\":[{\"name\":\"commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"commodityName\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"commodityTransport\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"transportTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"transportX\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"transportY\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"remark\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"transportStatus\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"supervisor\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"deleted\",\"type\":\"bool\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"bool\"}],\"dynamic\":true,\"typeAsString\":\"(uint256,string,string,uint256,i","nt256,int256,string,uint256,string,bool)\"}]},{\"methodSignatureAsString\":\"addTransport((uint256,string,string,uint256,int256,int256,string,uint256,string,bool))\",\"name\":\"addTransport\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"info\",\"type\":\"tuple\",\"internalType\":\"\",\"indexed\":false,\"components\":[{\"name\":\"commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"commodityName\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"commodityTransport\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"transportTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"transportX\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"transportY\",\"type\":\"int256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"remark\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"transportStatus\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"supervisor\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"deleted\",\"type\":\"bool\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"bool\"}],\"dynamic\":true,\"typeAsString\":\"(uint256,string,string,uint256,int256,int256,string,uint256,string,bool)\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"getSell(uint256)\",\"name\":\"getSell\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"_commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"\",\"indexed\":false,\"components\":[{\"name\":\"commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"commodityName\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"sellTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"testResult\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"remark\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"testPicture\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"supervisor\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"deleted\",\"type\":\"bool\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"bool\"}],\"dynamic\":true,\"typeAsString\":\"(uint256,string,uint256,uint256,string,string,string,bool)\"}]},{\"methodSignatureAsString\":\"addSell((uint256,string,uint256,uint256,string,string,string,bool))\",\"name\":\"addSell\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"info\",\"type\":\"tuple\",\"internalType\":\"\",\"indexed\":false,\"components\":[{\"name\":\"commodityId\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"commodityName\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"sellTime\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"testResult\",\"type\":\"uint256\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"remark\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"testPicture\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"supervisor\",\"type\":\"string\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"deleted\",\"type\":\"bool\",\"internalType\":\"\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"bool\"}],\"dynamic\":true,\"typeAsString\":\"(uint256,string,uint256,uint256,string,string,string,bool)\"}],\"outputs\":[]}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_DELETETRANSPORT = "deleteTransport";

    public static final String FUNC_GETORIGIN = "getOrigin";

    public static final String FUNC_DELETEORIGIN = "deleteOrigin";

    public static final String FUNC_ADDORIGIN = "addOrigin";

    public static final String FUNC_DELETESELL = "deleteSell";

    public static final String FUNC_GETTRANSPORT = "getTransport";

    public static final String FUNC_ADDTRANSPORT = "addTransport";

    public static final String FUNC_GETSELL = "getSell";

    public static final String FUNC_ADDSELL = "addSell";

    protected Agriculture(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt deleteTransport(BigInteger _commodityId) {
        final Function function = new Function(
                FUNC_DELETETRANSPORT,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deleteTransport(BigInteger _commodityId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETETRANSPORT,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteTransport(BigInteger _commodityId) {
        final Function function = new Function(
                FUNC_DELETETRANSPORT,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getDeleteTransportInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETETRANSPORT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Struct0 getOrigin(BigInteger _commodityId) throws ContractException {
        final Function function = new Function(FUNC_GETORIGIN,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Struct0>() {}));
        return executeCallWithSingleValueReturn(function, Struct0.class);
    }

    public TransactionReceipt deleteOrigin(BigInteger _commodityId) {
        final Function function = new Function(
                FUNC_DELETEORIGIN,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deleteOrigin(BigInteger _commodityId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETEORIGIN,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteOrigin(BigInteger _commodityId) {
        final Function function = new Function(
                FUNC_DELETEORIGIN,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getDeleteOriginInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETEORIGIN,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt addOrigin(Struct0 info) {
        final Function function = new Function(
                FUNC_ADDORIGIN,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addOrigin(Struct0 info, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDORIGIN,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddOrigin(Struct0 info) {
        final Function function = new Function(
                FUNC_ADDORIGIN,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<Struct0> getAddOriginInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDORIGIN,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Struct0>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Struct0>(

                (Struct0) results.get(0)
                );
    }

    public TransactionReceipt deleteSell(BigInteger _commodityId) {
        final Function function = new Function(
                FUNC_DELETESELL,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deleteSell(BigInteger _commodityId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DELETESELL,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeleteSell(BigInteger _commodityId) {
        final Function function = new Function(
                FUNC_DELETESELL,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getDeleteSellInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DELETESELL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Struct1 getTransport(BigInteger _commodityId) throws ContractException {
        final Function function = new Function(FUNC_GETTRANSPORT,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Struct1>() {}));
        return executeCallWithSingleValueReturn(function, Struct1.class);
    }

    public TransactionReceipt addTransport(Struct1 info) {
        final Function function = new Function(
                FUNC_ADDTRANSPORT,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addTransport(Struct1 info, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDTRANSPORT,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddTransport(Struct1 info) {
        final Function function = new Function(
                FUNC_ADDTRANSPORT,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<Struct1> getAddTransportInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDTRANSPORT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Struct1>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Struct1>(

                (Struct1) results.get(0)
                );
    }

    public Struct2 getSell(BigInteger _commodityId) throws ContractException {
        final Function function = new Function(FUNC_GETSELL,
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(_commodityId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Struct2>() {}));
        return executeCallWithSingleValueReturn(function, Struct2.class);
    }

    public TransactionReceipt addSell(Struct2 info) {
        final Function function = new Function(
                FUNC_ADDSELL,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addSell(Struct2 info, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDSELL,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddSell(Struct2 info) {
        final Function function = new Function(
                FUNC_ADDSELL,
                Arrays.<Type>asList(info),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<Struct2> getAddSellInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDSELL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Struct2>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Struct2>(

                (Struct2) results.get(0)
                );
    }

    public static Agriculture load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new Agriculture(contractAddress, client, credential);
    }

    public static Agriculture deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(Agriculture.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class Struct0 extends DynamicStruct {
        public BigInteger commodityId;

        public String commodityName;

        public String origin;

        public BigInteger originX;

        public BigInteger originY;

        public String commodityPartition;

        public BigInteger bagging;

        public BigInteger growTime;

        public BigInteger irrigateTime;

        public BigInteger fertilizerTime;

        public BigInteger weedingTime;

        public BigInteger temperature;

        public String farming;

        public BigInteger pickingTime;

        public String remark;

        public String supervisor;

        public Boolean deleted;

        public Struct0(Uint256 commodityId, Utf8String commodityName, Utf8String origin, Int256 originX, Int256 originY, Utf8String commodityPartition, Uint256 bagging, Uint256 growTime, Uint256 irrigateTime, Uint256 fertilizerTime, Uint256 weedingTime, Int256 temperature, Utf8String farming, Uint256 pickingTime, Utf8String remark, Utf8String supervisor, Bool deleted) {
            super(commodityId,commodityName,origin,originX,originY,commodityPartition,bagging,growTime,irrigateTime,fertilizerTime,weedingTime,temperature,farming,pickingTime,remark,supervisor,deleted);
            this.commodityId = commodityId.getValue();
            this.commodityName = commodityName.getValue();
            this.origin = origin.getValue();
            this.originX = originX.getValue();
            this.originY = originY.getValue();
            this.commodityPartition = commodityPartition.getValue();
            this.bagging = bagging.getValue();
            this.growTime = growTime.getValue();
            this.irrigateTime = irrigateTime.getValue();
            this.fertilizerTime = fertilizerTime.getValue();
            this.weedingTime = weedingTime.getValue();
            this.temperature = temperature.getValue();
            this.farming = farming.getValue();
            this.pickingTime = pickingTime.getValue();
            this.remark = remark.getValue();
            this.supervisor = supervisor.getValue();
            this.deleted = deleted.getValue();
        }

        public Struct0(BigInteger commodityId, String commodityName, String origin, BigInteger originX, BigInteger originY, String commodityPartition, BigInteger bagging, BigInteger growTime, BigInteger irrigateTime, BigInteger fertilizerTime, BigInteger weedingTime, BigInteger temperature, String farming, BigInteger pickingTime, String remark, String supervisor, Boolean deleted) {
            super(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(commodityId),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(commodityName),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(origin),new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(originX),new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(originY),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(commodityPartition),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(bagging),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(growTime),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(irrigateTime),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(fertilizerTime),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(weedingTime),new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(temperature),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(farming),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(pickingTime),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(remark),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(supervisor),new org.fisco.bcos.sdk.abi.datatypes.Bool(deleted));
            this.commodityId = commodityId;
            this.commodityName = commodityName;
            this.origin = origin;
            this.originX = originX;
            this.originY = originY;
            this.commodityPartition = commodityPartition;
            this.bagging = bagging;
            this.growTime = growTime;
            this.irrigateTime = irrigateTime;
            this.fertilizerTime = fertilizerTime;
            this.weedingTime = weedingTime;
            this.temperature = temperature;
            this.farming = farming;
            this.pickingTime = pickingTime;
            this.remark = remark;
            this.supervisor = supervisor;
            this.deleted = deleted;
        }
    }

    public static class Struct1 extends DynamicStruct {
        public BigInteger commodityId;

        public String commodityName;

        public String commodityTransport;

        public BigInteger transportTime;

        public BigInteger transportX;

        public BigInteger transportY;

        public String remark;

        public BigInteger transportStatus;

        public String supervisor;

        public Boolean deleted;

        public Struct1(Uint256 commodityId, Utf8String commodityName, Utf8String commodityTransport, Uint256 transportTime, Int256 transportX, Int256 transportY, Utf8String remark, Uint256 transportStatus, Utf8String supervisor, Bool deleted) {
            super(commodityId,commodityName,commodityTransport,transportTime,transportX,transportY,remark,transportStatus,supervisor,deleted);
            this.commodityId = commodityId.getValue();
            this.commodityName = commodityName.getValue();
            this.commodityTransport = commodityTransport.getValue();
            this.transportTime = transportTime.getValue();
            this.transportX = transportX.getValue();
            this.transportY = transportY.getValue();
            this.remark = remark.getValue();
            this.transportStatus = transportStatus.getValue();
            this.supervisor = supervisor.getValue();
            this.deleted = deleted.getValue();
        }

        public Struct1(BigInteger commodityId, String commodityName, String commodityTransport, BigInteger transportTime, BigInteger transportX, BigInteger transportY, String remark, BigInteger transportStatus, String supervisor, Boolean deleted) {
            super(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(commodityId),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(commodityName),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(commodityTransport),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(transportTime),new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(transportX),new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(transportY),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(remark),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(transportStatus),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(supervisor),new org.fisco.bcos.sdk.abi.datatypes.Bool(deleted));
            this.commodityId = commodityId;
            this.commodityName = commodityName;
            this.commodityTransport = commodityTransport;
            this.transportTime = transportTime;
            this.transportX = transportX;
            this.transportY = transportY;
            this.remark = remark;
            this.transportStatus = transportStatus;
            this.supervisor = supervisor;
            this.deleted = deleted;
        }
    }

    public static class Struct2 extends DynamicStruct {
        public BigInteger commodityId;

        public String commodityName;

        public BigInteger sellTime;

        public BigInteger testResult;

        public String remark;

        public String testPicture;

        public String supervisor;

        public Boolean deleted;

        public Struct2(Uint256 commodityId, Utf8String commodityName, Uint256 sellTime, Uint256 testResult, Utf8String remark, Utf8String testPicture, Utf8String supervisor, Bool deleted) {
            super(commodityId,commodityName,sellTime,testResult,remark,testPicture,supervisor,deleted);
            this.commodityId = commodityId.getValue();
            this.commodityName = commodityName.getValue();
            this.sellTime = sellTime.getValue();
            this.testResult = testResult.getValue();
            this.remark = remark.getValue();
            this.testPicture = testPicture.getValue();
            this.supervisor = supervisor.getValue();
            this.deleted = deleted.getValue();
        }

        public Struct2(BigInteger commodityId, String commodityName, BigInteger sellTime, BigInteger testResult, String remark, String testPicture, String supervisor, Boolean deleted) {
            super(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(commodityId),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(commodityName),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(sellTime),new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(testResult),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(remark),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(testPicture),new org.fisco.bcos.sdk.abi.datatypes.Utf8String(supervisor),new org.fisco.bcos.sdk.abi.datatypes.Bool(deleted));
            this.commodityId = commodityId;
            this.commodityName = commodityName;
            this.sellTime = sellTime;
            this.testResult = testResult;
            this.remark = remark;
            this.testPicture = testPicture;
            this.supervisor = supervisor;
            this.deleted = deleted;
        }
    }
}
